---
import { type CollectionEntry, getCollection } from "astro:content"
import MDXComponents from "@components/MDXComponents.astro"

interface MarkdownHeading {
  depth: number;
  slug: string;
  text: string;
}

type Props = {
  entry: CollectionEntry<"blog"> | CollectionEntry<"projects"> | CollectionEntry<"publications"> | CollectionEntry<"talks">
}

// Get the requested entry
const { entry } = Astro.props
const { collection } = entry
const { Content, headings } = await entry.render()

// Check if table of contents is enabled
const showToc = 'toc' in entry.data && entry.data.toc === true

// Get the next and prev entries (modulo to wrap index)
const items = (await getCollection(collection))
  .filter((post: CollectionEntry<typeof collection>) => !post.data.draft)
  .sort((a: CollectionEntry<typeof collection>, b: CollectionEntry<typeof collection>) => 
    b.data.date.getTime() - a.data.date.getTime()
  )
const index = items.findIndex((x: CollectionEntry<typeof collection>) => x.slug === entry.slug)
const prev = items[(index - 1 + items.length) % items.length]
const next = items[(index + 1) % items.length]
---

<div>
  <article>
    {showToc && headings.length > 0 && (
      <div class="toc-container mb-8 border border-black/15 dark:border-white/20 rounded-lg">
        <button id="toc-toggle" class="w-full flex justify-between items-center p-4 hover:bg-black/5 hover:dark:bg-white/10 transition-colors duration-300 ease-in-out">
          <span class="font-medium">Contents</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="toc-chevron transition-transform duration-300">
            <polyline points="6 9 12 15 18 9"></polyline>
          </svg>
        </button>
        <div id="toc-content" class="px-4 pb-4 pt-0">
          <ul class="space-y-2">
            {headings
              .filter((heading: MarkdownHeading) => heading.depth <= 3)
              .map((heading: MarkdownHeading) => (
                <li class={`toc-item toc-level-${heading.depth}`} style={`margin-left: ${(heading.depth - 1) * 1.5}rem`}>
                  <a href={`#${heading.slug}`} class="no-underline hover:text-black dark:hover:text-white hover:underline blend">
                    {heading.text}
                  </a>
                </li>
              ))
            }
          </ul>
        </div>
      </div>
      <script>
        function initTocToggle() {
          const tocToggle = document.getElementById('toc-toggle');
          const tocContent = document.getElementById('toc-content');
          const tocChevron = document.querySelector('.toc-chevron');
          
          if (tocToggle && tocContent) {
            // Set initial state (expanded)
            let isExpanded = true;
            
            tocToggle.addEventListener('click', () => {
              isExpanded = !isExpanded;
              
              if (isExpanded) {
                if (tocContent) tocContent.style.display = 'block';
                if (tocChevron && tocChevron instanceof HTMLElement) {
                  tocChevron.style.transform = 'rotate(0deg)';
                }
              } else {
                if (tocContent) tocContent.style.display = 'none';
                if (tocChevron && tocChevron instanceof HTMLElement) {
                  tocChevron.style.transform = 'rotate(-180deg)';
                }
              }
            });
          }
        }
        
        // Run on initial load
        initTocToggle();
        
        // Also run when the DOM content is loaded (for client-side navigation)
        document.addEventListener('DOMContentLoaded', initTocToggle);
        
        // For Astro view transitions
        document.addEventListener('astro:page-load', initTocToggle);
      </script>
    )}
    <MDXComponents>
      <Content />
    </MDXComponents>
  </article>

  <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mt-8">
    <a href={`/${prev.collection}/${prev.slug}`} class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 blend">
      <div class="order-2 w-full h-full group-hover:text-black group-hover:dark:text-white blend">
        <div class="flex flex-wrap gap-2">
          <div class="text-sm uppercase">
            Prev
          </div>
        </div>
        <div class="font-semibold mt-3 text-black dark:text-white">
          {prev.data.title}
        </div>
      </div>
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="order-1 stroke-current group-hover:stroke-black group-hover:dark:stroke-white rotate-180">
        <line x1="5" y1="12" x2="19" y2="12" class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
        <polyline points="12 5 19 12 12 19" class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
      </svg>
    </a>
    <a href={`/${next.collection}/${next.slug}`} class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out">
      <div class="w-full h-full text-right group-hover:text-black group-hover:dark:text-white blend">
        <div class="text-sm uppercase">
          Next
        </div>
        <div class="font-semibold mt-3 text-black dark:text-white">
          {next.data.title}
        </div>
      </div>
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white">
        <line x1="5" y1="12" x2="19" y2="12" class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
        <polyline points="12 5 19 12 12 19" class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
      </svg>
    </a>
  </div>
</div>

---
interface Props {
  type: 'note' | 'tip' | 'info' | 'warning' | 'danger';
  title?: string;
  compact?: boolean;
}

const { type, title, compact = false } = Astro.props;

// Define colors and icons based on type
const typeConfig = {
  note: {
    color: '#3b82f6',
    bgColor: 'rgba(59, 130, 246, 0.08)',
    borderColor: 'rgba(59, 130, 246, 0.4)',
    icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><path d="M12 8h.01M12 12h.01M12 16h.01M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2Z"/></svg>',
    defaultTitle: 'Note'
  },
  tip: {
    color: '#10b981',
    bgColor: 'rgba(16, 185, 129, 0.08)',
    borderColor: 'rgba(16, 185, 129, 0.4)',
    icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><path d="M12 2v8M12 18v4M4.93 10.93l1.41 1.41M17.66 11.66l1.41 1.41M2 18h2M20 18h2M19.07 6.93l-1.41 1.41M6.34 7.34 4.93 8.75M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8Z"/></svg>',
    defaultTitle: 'Tip'
  },
  info: {
    color: '#06b6d4',
    bgColor: 'rgba(6, 182, 212, 0.08)',
    borderColor: 'rgba(6, 182, 212, 0.4)',
    icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><circle cx="12" cy="12" r="10"/><path d="M12 16v-4M12 8h.01"/></svg>',
    defaultTitle: 'Info'
  },
  warning: {
    color: '#f59e0b',
    bgColor: 'rgba(245, 158, 11, 0.08)',
    borderColor: 'rgba(245, 158, 11, 0.4)',
    icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"/><path d="M12 9v4M12 17h.01"/></svg>',
    defaultTitle: 'Warning'
  },
  danger: {
    color: '#ef4444',
    bgColor: 'rgba(239, 68, 68, 0.08)',
    borderColor: 'rgba(239, 68, 68, 0.4)',
    icon: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><path d="M10.29 3.86 1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0zM12 9v4M12 17h.01"/></svg>',
    defaultTitle: 'Danger'
  }
};

const config = typeConfig[type];
const admonitionTitle = title || config.defaultTitle;
const paddingClass = compact ? 'p-3 my-3 text-sm' : 'p-4 my-4';
---

<div
  class={`admonition admonition-${type} ${paddingClass} rounded-md shadow-sm`}
  style={`background-color: ${config.bgColor}; border: 1px solid ${config.borderColor};`}
>
  <div class="admonition-header flex items-center gap-1.5 mb-1 font-medium" style={`color: ${config.color};`}>
    <span class="admonition-icon" set:html={config.icon} style={`color: ${config.color};`}></span>
    <span>{admonitionTitle}</span>
  </div>
  <div class="admonition-content text-gray-700 dark:text-gray-300">
    <slot />
  </div>
</div>